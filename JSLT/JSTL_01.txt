+ JSTL, JSP Standard Tag Library

 - JSP 에서 사용 가능한 표준 태그 라이브러리
 
 - JSP 코드의 가독성이 좋아진다
 - 자바코드를 작성할 상황을 최소화시켜준다
 
 - 추가 라이브러리 파일이 필요하다
 - JSP 페이지에서 taglib 지시자를 이용하여 활성화해주어야 한다
 
+ JSTL이 제공하는 5가지 커스텀 태그

 - core
      논리 판단(조건문), 반복문의 제어문을 지원하는 태그
      다른 JSP호출하는 기능의 태그도 포함
 
 - format
      날짜, 숫자, 시간 데이터의 서식을 지정하는 태그
      
 - sql
      데이터베이스 처리
 
 - xml
      XML문서에 대한 처리
 
 - functions
      문자열 처리 함수를 사용할 수 있게 해주는 기능
      단독 태그로 사용하지 않고 EL과 함게 사용한다




+ JSTL taglib 지시자

 - JSTL 태그라이브러리를 활성화하는 지시자가 필요하다
 
 - <@ taglib prefix="접두어" uri="라이브러리 식별값" %>
 
 - Core
  <@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
  
 - Format
  <@ taglib prefix="fmt" uri="http://java.sun.com/jsp/jstl/fmt" %>

 - Sql
  <@ taglib prefix="sql" uri="http://java.sun.com/jsp/jstl/sql" %>
  
 - Xml
  <@ taglib prefix="x" uri="http://java.sun.com/jsp/jstl/xml" %>  

 - Functions
  <@ taglib prefix="fn" uri="http://java.sun.com/jsp/jstl/functions" %>


+ JSTL Core 태그 라이브러리

 - out      JSP Writer를 이용한 브라우저 출력
 
 <c:out value="출력값"
        default="value 값이 null일때 출력될 값"
        escapeXml="true | false" />
        
        ** escapeXml 속성
         true - < > & " '를 문자 그대로 출력( 기본값 )
         false - 

 - set 	JSP변수 설정, 등록(컨텍스트 영역)
	<c:set var="변수명" value="값" [scope="영역"]/>
	<c:set var="변수명" [scope="영역"]/>값 </c:set>

		** scope : page(기본값) | request | session | application

	** var 속성 대신 target을 사용해서 객체의 내부 프로퍼티의 값을 설정할 수 있다
	(객체, Map)
 
 - remove 	변수제거
	<c:remove var="변수명" [scope="영역"] />
	** scope 를 지정하지 않으면 모든 컨텍스트 영역의 변수를 제거한다

 - if		조건문(1번사용)
	<c:if test="조건식">
		//조건식 결과가 true일 때 수행하는 코드
	</c:if>
	<c:if test="조건식" var="결과저장변수" scope="영역">
	//var로 지정된 변수에 true또는 false가 저장된다
	//다른 컨텍스트영역과 수행결과를 공유할 때 사용한다
	
	//조건식 결과가 true일 떼 수행하는 코드
	</c:if>
 - choose 	다중조건문(else fi, else의 기능)
	<c:choose>
		<c:when test="조건1">
			<%--조건1이 true일 때 수행하는 영역 --%>
		</c:when>
		<c:when test="조건1">
			<%--조건1이 true일 때 수행하는 영역 --%>
		</c:when>
		...
		<c:otherwise>
			<%-- 모든 조건이 false 일때 수행 --%>
			<$-- 생략 가능함 --%>
		</c:otherwise>
	</c:choose>

+forEach   반복문 또는 컬렉션이나 맵의 Interator
   <c:forEach var=”변수” 
      begin=”시작값” end=”끝값” step=”증가값”
      items=”반복될객체”
      varStatus=”반복정보객체”>
      // ${var } 변수를 이용한 코드
   </c:forEach>

forTokens   문자열을 split한 결과배열의 토큰값으로 반복
<c:forTokens var=”변수” litems=”원본문자열” delims=”구분문자”>
      ${변수}
</c:forTokens>
** items의 문자열을 delims로 split하여 결과를 순서대로 var에 지정한 변수에 담아 반복하는 태그

- import		자원삽입
	<c:import url="삽입할 페이지"/>
	<c:import url="삽입할 페이지"/>
		<c:param name="키" value="값"/>
	</c:import>

	** <jsp:include>와 같은기능이다
	** 파라미터를 전달할 수 있다


- redirect(쓸일 없음)	페이지 이동(리다이렉션)
	<c:redirect url="리다이렉트 페이지"/>
	<c:redirect url="리다이렉트 페이지"/>
		<c:param name="키" value="값"/>
	</c:redirect>
	
	** 자바스크립트를 이용한 location.href와 같은 결과
	** location.href는 클라이언트에서 동작
	** <c:redirect>는 서버에서 동작
	
	** 우리는 JSP에서 곧바로 리다이렉트하는 일은 거의 없을 것(안씀)

- catch	예외처리

	<c:catch var="변수">
		//예외발생 가능한 코드
	</c:catch>

	**발생한 예외객체를 변수에 저장한다

< JSTL Format 태그 >

 <%@ taglib prefix="fmt" uri="http://java.sun.com/jsp/jstl/fmt" %>

 - formatNumber
	문다열을 숫자로 서식화하는 태그

	<fmt:formatNumber
		value="값"
		type="숫자형식"
		pattern="서식패턴지정"
		currencyCode="통화코드"
		currencySymbol="통화심볼"($,\같은것)
		groupingUsed="true|false"

		var="변수"	
		scope="컨텍스트영역"/>

	type :	number(기본값) | currency | percent (단순숫자|통화|퍼센트)
		** percent는 100배 수치변화가 있으니 조심할 것
		** 0.5 == 50%로 출력됨

	pattern: 	데이터의 서식, java.text.DecimalFormat의 패턴(서식) 사용
		#: 유효숫자가 존재하면 숫자를 표시한다
		0: 자리수만큼 0으로 채운다
	
	currencyCode : 	통화코드,ISO에서 4217에서 지정한 표준을 사용함(KRW,대한민국원)
	currencySymbol : 	통화심볼 저장

	groupingUsed: 	false - 숫자를 구분하는 ,(comma) 제거(자릿수 구분자 제거)
	
 - formatDate
	java.util.Date 데이터를 날짜형식 서식화하는 태그
	
	<fmt:formatDate
		value="값"
		type="날짜시간형식"
		dateStyle="날짜표현방식"
		timeStyle="시간표현방식"

		pattern="패턴지정문자"
		timeZome="시간대"
		var="변수"
		scope="영역"	/>

	type :	date(기본값) | time | both
	
	dateStyle, timeStyle
		default | short | medium | long | full 

	pattern :  	yy,MM,dd,hh,mm,ss
			a,HH,hh,kk,z,Z,X,S

			** MM : 월(대문자M)
			** mm : 분(소문자m)

			** HH : 24시간 hour(자정이 00시)
			** hh : 12시간 hour(자정이 12시)
			---------------아래는 안씀(안익숙)--------------
			** KK : 12시간 hour(자정이 00시)
			** kk : 24시간 hour(자정이 24시)

			** S : 밀리초
			** ss : 초
	
			** a : am/pm

			** z,Z,X : time zone(시간대)



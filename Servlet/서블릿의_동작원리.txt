< 서블릿의 동작 원리 >

 - 클라이언트 요청 -> Apache Tomcat 서버(WEB 서버,  WAS 서버) 
-> 서블릿 컨테이너 -> 서블릿 객체 ->  service() 호출 -> doGet() 또는 doPost()호출
-> 서블릿 컨테이너 ->  Apache Tomcat  서버 -> 클라이언트 응답

< 서블릿 컨테이너,  Service Container >

 - 서블릿 처리(동작) 환경을 구축하는 역할
 - 서블릿을 생성하고 실행시켜주는 역할을 수행한다
 - WAS 서버와 서블릿 객체 사이의 중간다리 역할을 해준다
 - HttpServletRequest(HTTP요청객체), HttpServletResponse(HTTP응답객체) 두가지를 생성하여 서블릿에 전달한다
 - 요청 URL - pattern과 서블릿 객체를 1:1로 매핑해놓고 요청을 기다린다

< 서블릿 라이프 사이클(생명주기) >
			//service() 만 우리가 다룰것이다- 나머지는 Servlet Container가 알아서 처리//
 - 객체 생성 -> init() 실행 -> service() 실행 ->  destroy() 실행 
 (생성자호출) -> (서블릿초기화)-> (doGet(), doPost() 반복적실행)->(서버종료)

 - 객체 생성 : 서블릿 객체가 처음으로 사용될 때 수행한다( URL요청)

 	- init() : 서블릿 객체가 처음 생성된 이후 바로 호출된다
	- service() : 처음 객체 생성될 때를 포함하여 매 URL 요청마다 수행된다
	- destroy() : 서버가 종료되는 시점에 호출된다

 ** 서버가 켜진 후 처음으로 서블릿을 사용할 때(첫 요청에 반응할 때)
	객체 생성 -  init() -service()- 응답순으로 수행한다
 ** 객체가 생성된 이후 서블릿을 사용할 때 (요청이 처음이 아닐때)

< HTTP 요청 GET, POST  메소드 >

 - GET메소드는 서버의 자원(데이터)를 조회(SELECT)할 때 사용한다
 - POST메소드는 서버의 자원(데이터)을 삽입, 수정, 삭제(INSERT,UPDATE,DELETE)할 때 사용한다

 - 전달 파라미터가 단순하거나 없으면 GET을 사용한다
 - 전달 파라미터가 큰(긴) 데이터이거나 민감한 정보일 경우 POST를 사용한다(ex-비밀번호)

 - GET은 URL 뒤에 쿼리스트링으로 작성되어 전달 파라미터가 서버로 전달된다(노출)
	 - URL에 데이터가 노출됨
 - POST는 요청메세지의 BODY영역에 쿼리스트링으로 작성되어 전달파라미터가 서버로 전달된다
 	- 데이터를 1차적으로 숨길 수 있음

< GET 메소드로 요청이 발생하는 상황 >
 1. 단순히 URL만 요청했을 때
 	-브라우저에서 주소입력창에 URL을 입력했을 때
 	-정적인 파일을 요청할 때(파일, html,css,js,이미지 등)
 2. <form>에서 메소드를 get으로 설정하고 submit했을 때
 3. <a> 링크를 클릭했을 때
 4. location.href="URL"을 이용한 페이지 이동  

< POST 메소드로 요청이 발생하는 상황 >
 - <form>에서 method="post"로 설정하고  submit했을때 
	:ex) $("<form>").attr("method","post");


< 요청 파라미터의 한글 인코딩처리 설정하기 UTF-8 >

 - 아파치 웹 서버는 인코딩을 ISO-8859-1(Latin 1)을 사용한다
 - 한글이 웹 서버를 통과할 때 ISO-8859-1 방식으로 해석해버린다(한글이 깨짐)
 - 원본 데이터가 UTF-8 인코딩을 사용하므로 데이터를 사용할 때 UTF-8 형식으로 다시 합성할 필요가 있다
	-> UTF-8 인코딩 설정이 필요하다
	


 < GET 메소드 요청데이터에 대한 한글(UTF-8) 설정 >
 - 사용중인 서버의 설정파일인 server.xml파일에서 인코딩을 설정해야함
 - 사용중인 서버의  PORT번호를 속성으로 가지고 있는 63번째줄 <Connector>를 찾는다
 - URIEncoding="UTF-8" 속성을 추가한다
 -<Connector URIEncoding="UTF-8" connectionTimeout="20000" port="8800" protocol="HTTP/1.1" redirectPort="8443"/>
 
< POST 메소드 요청데이터에 대한 한글(UTF-8) 설정 >
  - 요청 객체를 사용하기 전에 인코딩을 UTF-8로 설정한다
	req.setCharacterEncoding("UTF-8");
  
 





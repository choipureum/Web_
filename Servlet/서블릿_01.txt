< 서블릿, Servlet >

 - Servlet = Server + Applet

 - 서버에서 동작하는 애플릿 프로그램
	** 애플릿, Applet
	 자바언어로 개발되어 바이트코드 형태로 배포되는 실행 가능 형태의 프로그램
	 JVM만 존재한다면 애플릿 프로그램을 실행할 수 있다
	 주로 JVM이 포함된 웹서버(톰캣), 애플릿 실행기 등에서 동작한다
	 플러그인 형태로 JVM을 포함하고 잇는 브라우저에서도 동작 가능
	 
 - 웹 어플리케이션을 개발하기 위한 자바의 기술( Spec )
	-> 서블릿 스펙(Servlet Spec)

 - 서블릿 스펙에 맞춰서 개발된 서블릿 클래스를 '서블릿'이라고도 말함

 - MVC 패턴에서 Controller 역할을 담당한다

< 서블릿 클래스의 형태 >

import javax.servlet.http.HttpServlet;

public class [클래스명] extends HttpServlet{
	//클라이언트 요청 처리 메소드
	// doGet(), doPost() 오버라이딩

}
**접근제한자를 반드시 public으로 해야한다(중요)


< WEB 서버 >
 
 - HTTP 요청과 HTTP 응답 처리하는 기능의 서버	

< WAS 서버, Web Application Server >

 - 웹 서버 프로그램을 해석하고 동작시켜주는 기능

 

 ** 웹서버는 클라이언트의 요청을 받아서 정적인 자원들에 응답한다
	-> HTML, CSS, JS, IMAGE 등의 파일

 ** WAS서버는 동적인 자원인 자원에 대한 요청(서비스)에 대한 처리(해석) 담당한다
	-> 결과적으로 Servlet 코드를 실행시킨다
 



< 소스코드(서블릿,.java 파일)의 경로
	{워크스페이스}/{프로젝트폴더}/src/

< 컴파일 결과물(바이트코드, .class 파일)의 경로

	{워크스페이스}/{프로젝트폴더}/build/classes/

< 톰캣서버 배포(업로드) 경로 >

 - 실행 가능 형태의 서블릿(.class)이 업로드되는 서버의 폴더

 - {워크스페이스}/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/{프로젝트명}/WEB-INF/classes/
	** tmp0은 tmp1,2등으로 나타날 수 있음
	** 현재 사용중인 폴더는 직접 찾아야함(대부분 가장높은 번호)










